name: Build and Release Codi CLI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

env:
  DOTNET_VERSION: '10.0.x'
  PROJECT_PATH: 'Codi.Cli/Codi.Cli.csproj'
  TOOL_NAME: 'codi'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        dotnet-quality: 'preview'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: Run Tests
      run: dotnet test --configuration Release --no-build --verbosity normal

  package-and-release:
    name: Package and Release
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        dotnet-quality: 'preview'
        
    - name: Update version from release tag
      run: |
        VERSION=${{ github.event.release.tag_name }}
        VERSION=${VERSION#v} # Remove 'v' prefix if present
        dotnet add ${{ env.PROJECT_PATH }} package Microsoft.Build.NoTargets --version 3.7.56 > /dev/null || true
        sed -i "s/<Version>.*<\/Version>/<Version>$VERSION<\/Version>/" ${{ env.PROJECT_PATH }}
        
    - name: Pack as .NET Tool
      run: dotnet pack ${{ env.PROJECT_PATH }} --configuration Release --output ./nupkg
      
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: ./nupkg/*.nupkg
        tag_name: ${{ github.event.release.tag_name }}
        name: Release ${{ github.event.release.tag_name }}
        body: |
          ## Codi CLI Release ${{ github.event.release.tag_name }}
          
          ### Installation als .NET Global Tool:
          ```bash
          dotnet tool install -g Codi.CLI --version ${{ github.event.release.tag_name }}
          ```
          
          ### Verwendung:
          ```bash
          codi --from input.json --to output
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-nuget:
    name: Publish to NuGet
    needs: package-and-release
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && !github.event.release.prerelease
    
    steps:        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        dotnet-quality: 'preview'
        
    - name: Publish to NuGet
      run: |
        echo "NuGet publishing skipped - configure NUGET_API_KEY secret to enable"
        # dotnet nuget push *.nupkg \
        #   --api-key ${{ secrets.NUGET_API_KEY }} \
        #   --source https://api.nuget.org/v3/index.json \
        #   --skip-duplicate
